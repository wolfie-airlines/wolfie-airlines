"C:\Users\szymo\AppData\Local\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=C:/Users/szymo/AppData/Local/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe" -DCMAKE_TOOLCHAIN_FILE=C:\Users\szymo\.vcpkg-clion\airport\scripts\buildsystems\vcpkg.cmake -G Ninja -S C:\Users\szymo\Documents\GitHub\7b365783-gr71-repo\Projekt\airport -B C:\Users\szymo\Documents\GitHub\7b365783-gr71-repo\Projekt\airport\cmake-build-debug
-- Running vcpkg install
Detecting compiler hash for triplet x64-windows...
Compiler found: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.39.33519/bin/Hostx64/x64/cl.exe
All requested packages are currently installed.
Total install time: 500 ns
The package opengl is compatible with built-in CMake targets via CMake v3.7 and prior syntax

    find_package(OpenGL REQUIRED)
    target_link_libraries(main PRIVATE ${OPENGL_LIBRARIES})
    target_include_directories(main PRIVATE ${OPENGL_INCLUDE_DIR})

and the CMake v3.8 and beyond imported target syntax

    find_package(OpenGL REQUIRED)
    target_link_libraries(main PRIVATE OpenGL::GL)

introduction of various components

    find_package(OpenGL REQUIRED COMPONENTS GL      # v3.8
                                            GLU     # v3.8
                                            GLX     # v3.10
                                            EGL     # v3.10
                                            OpenGL) # v3.10

The OpenGL SDK is highly platform dependent and is usually an OS component. It's not realistic to build from source for every platform.

    WINDOWS: is part of the Windows SDK which this package installs.
    LINUX: the SDK may be installed from your distro's repo or from 3rd parties manually. There are too many to count.
    APPLE: consult your distribution vendor on the state of OpenGL support: https://support.apple.com/en-us/HT202823

The package glew is compatible with built-in CMake targets:

    find_package(GLEW REQUIRED)
    target_link_libraries(main PRIVATE GLEW::GLEW)

mongo-cxx-driver provides CMake targets:

    find_package(bsoncxx CONFIG REQUIRED)
    target_link_libraries(main PRIVATE $<IF:$<TARGET_EXISTS:mongo::bsoncxx_static>,mongo::bsoncxx_static,mongo::bsoncxx_shared>)

    find_package(mongocxx CONFIG REQUIRED)
    target_link_libraries(main PRIVATE $<IF:$<TARGET_EXISTS:mongo::mongocxx_static>,mongo::mongocxx_static,mongo::mongocxx_shared>)

sdl2 provides CMake targets:

    find_package(SDL2 CONFIG REQUIRED)
    target_link_libraries(main
        PRIVATE
        $<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
        $<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
    )

-- Running vcpkg install - done
-- The C compiler identification is MSVC 19.39.33523.0
-- The CXX compiler identification is MSVC 19.39.33523.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.39.33519/bin/Hostx64/x64/cl.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.39.33519/bin/Hostx64/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - not found
-- Found Threads: TRUE  
-- Found OpenGL: opengl32   
-- Configuring done (10.6s)
-- Generating done (0.0s)
-- Build files have been written to: C:/Users/szymo/Documents/GitHub/7b365783-gr71-repo/Projekt/airport/cmake-build-debug
